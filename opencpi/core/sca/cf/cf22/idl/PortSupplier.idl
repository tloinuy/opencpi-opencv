
/*
 *  Copyright (c) Mercury Federal Systems, Inc., Arlington VA., 2009-2010
 *
 *    Mercury Federal Systems, Incorporated
 *    1901 South Bell Street
 *    Suite 402
 *    Arlington, Virginia 22202
 *    United States of America
 *    Telephone 703-413-0781
 *    FAX 703-413-0784
 *
 *  This file is part of OpenCPI (www.opencpi.org).
 *     ____                   __________   ____
 *    / __ \____  ___  ____  / ____/ __ \ /  _/ ____  _________ _
 *   / / / / __ \/ _ \/ __ \/ /   / /_/ / / /  / __ \/ ___/ __ `/
 *  / /_/ / /_/ /  __/ / / / /___/ ____/_/ / _/ /_/ / /  / /_/ /
 *  \____/ .___/\___/_/ /_/\____/_/    /___/(_)____/_/   \__, /
 *      /_/                                             /____/
 *
 *  OpenCPI is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  OpenCPI is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _PORTSUPPLIER_IDL
#define _PORTSUPPLIER_IDL

module CF {
  
  /**
   *  This interface provides the getPort operation for those objects that 
   * provide ports.
   */
  
  interface PortSupplier {
    /**
     *  This exception is raised if an undefined port is requested.
     */
    
    exception UnknownPort {
    };
    
    /**
     *  The getPort operation provides a mechanism to obtain a 
     * specific consumer or producer Port.  A PortSupplier may contain 
     * zero-to-many consumer and producer port components.  The exact 
     * number is specified in the component's Software Profile SCD 
     * (section Error! Reference source not found.).  These Ports can be 
     * either push or pull types.  Multiple input and/or output ports 
     * provide flexibility for PortSuppliers that must manage varying 
     * priority levels and categories of incoming and outgoing messages, 
     * provide multi-threaded message handling, or other special message 
     * processing.
     * 
     * The getPort operations returns the object reference to the named 
     * port as stated in the component's SCD.  The getPort operation 
     * returns the CORBA object reference that is associated with the 
     * input port name.
     * 
     * The getPort operation raises an UnknownPort exception if the port 
     * name is invalid.
     */
    Object getPort (
      in string name
      )      
      raises (UnknownPort);
      
  }; 
};

#pragma version CF::PortSupplier 1.0

#endif
