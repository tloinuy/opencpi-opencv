
/*
 *  Copyright (c) Mercury Federal Systems, Inc., Arlington VA., 2009-2010
 *
 *    Mercury Federal Systems, Incorporated
 *    1901 South Bell Street
 *    Suite 402
 *    Arlington, Virginia 22202
 *    United States of America
 *    Telephone 703-413-0781
 *    FAX 703-413-0784
 *
 *  This file is part of OpenCPI (www.opencpi.org).
 *     ____                   __________   ____
 *    / __ \____  ___  ____  / ____/ __ \ /  _/ ____  _________ _
 *   / / / / __ \/ _ \/ __ \/ /   / /_/ / / /  / __ \/ ___/ __ `/
 *  / /_/ / /_/ /  __/ / / / /___/ ____/_/ / _/ /_/ / /  / /_/ /
 *  \____/ .___/\___/_/ /_/\____/_/    /___/(_)____/_/   \__, /
 *      /_/                                             /____/
 *
 *  OpenCPI is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  OpenCPI is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.
 */

//Source file: StandardEvent.idl

#ifndef __STANDARDEVENT_DEFINED
#define __STANDARDEVENT_DEFINED

/* CmIdentification
  %X% %Q% %Z% %W% */

module StandardEvent {
	
	/* Type StateChangeCategoryType is an enumeration that is utilized in the
	StateChangeEventType. It is used to identify the category of state change
	that has occurred. */
	
	enum StateChangeCategoryType {
		ADMINISTRATIVE_STATE_EVENT,
		OPERATIONAL_STATE_EVENT,
		USAGE_STATE_EVENT
	};
	
	/* Type StateChangeType is an enumeration that is utilized in the
	StateChangeEventType. It is used to identify the specific states of the
	event source before and after the state change occurred. */
	
	enum StateChangeType {
		LOCKED,
		UNLOCKED,
		SHUTTING_DOWN,
		ENABLED,
		DISABLED,
		IDLE,
		ACTIVE,
		BUSY
	};
	
	/* Type StateChangeEventType is a structure used to indicate that the state of the
	event source has changed. The event producer will send this structure into an
	event channel on behalf of the event source. */
	
	struct StateChangeEventType {
		string producerId;
		string sourceId;
		StateChangeCategoryType stateChangeCategory;
		StateChangeType stateChangeFrom;
		StateChangeType stateChangeTo;
	};
	
	/* Type SourceCategoryType is an enumeration that is utilized in the
	DomainManagementObjectAddedEventType and
	DomainManagementObjectRemovedEventType. Is is used to
	identify the type of object that has been added to or removed from the domain. */
	
	enum SourceCategoryType {
		DEVICE_MANAGER,
		DEVICE,
		APPLICATION_FACTORY,
		APPLICATION,
		SERVICE
	};
	
	/* Type DomainManagementObjectRemovedEventType is a structure used to
	indicate that the event source has been removed from the domain. The event
	producer will send this structure into an event channel on behalf of the event source. */
	
	struct DomainManagementObjectRemovedEventType {
		string producerId;
		string sourceId;
		string sourceName;
		SourceCategoryType sourceCategory;
	};
	
	/* Type DomainManagementObjectAddedEventType is a structure used to indicate
	that the event source has been added to the domain. The event
	producer will send this structure into an event channel on behalf of the event source. */
	
	struct DomainManagementObjectAddedEventType {
		string producerId;
		string sourceId;
		string sourceName;
		SourceCategoryType sourceCategory;
		Object sourceIOR;
	};
	
};

#endif
