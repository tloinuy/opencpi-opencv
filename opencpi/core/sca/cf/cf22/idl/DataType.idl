
/*
 *  Copyright (c) Mercury Federal Systems, Inc., Arlington VA., 2009-2010
 *
 *    Mercury Federal Systems, Incorporated
 *    1901 South Bell Street
 *    Suite 402
 *    Arlington, Virginia 22202
 *    United States of America
 *    Telephone 703-413-0781
 *    FAX 703-413-0784
 *
 *  This file is part of OpenCPI (www.opencpi.org).
 *     ____                   __________   ____
 *    / __ \____  ___  ____  / ____/ __ \ /  _/ ____  _________ _
 *   / / / / __ \/ _ \/ __ \/ /   / /_/ / / /  / __ \/ ___/ __ `/
 *  / /_/ / /_/ /  __/ / / / /___/ ____/_/ / _/ /_/ / /  / /_/ /
 *  \____/ .___/\___/_/ /_/\____/_/    /___/(_)____/_/   \__, /
 *      /_/                                             /____/
 *
 *  OpenCPI is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  OpenCPI is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _DATATYPE_IDL
#define _DATATYPE_IDL

module CF {
  
  /**
   *  This type is a CORBA  IDL struct type which can be used to hold any
   *  CORBA basic type or static IDL type.
   */
  
  struct DataType {
    /**
     *  The id attribute indicates the kind of value and type 
     * (e.g., frequency, preset, etc.).  The id can be an UUID string,
     *  an integer string, or a name identifier.
     */
    string id;
    /**
     *  The value attribute can be any static IDL type or CORBA basic 
     * type.
     */
    any value;
  }; 

  /**
   *  The Properties is a CORBA IDL unbounded sequence of CF DataType(s),
   * which can be used in defining a sequence of name and value pairs.
   */
  
  typedef sequence <DataType> Properties; 


  exception UnknownProperties {
    Properties invalidProperties;
  }; 
};

#pragma version CF::DataType 1.0
#pragma version CF::Properties 1.0
#pragma version CF::UnknownProperties 1.0

#endif
