
# #####
#
#  Copyright (c) Mercury Federal Systems, Inc., Arlington VA., 2009-2010
#
#    Mercury Federal Systems, Incorporated
#    1901 South Bell Street
#    Suite 402
#    Arlington, Virginia 22202
#    United States of America
#    Telephone 703-413-0781
#    FAX 703-413-0784
#
#  This file is part of OpenCPI (www.opencpi.org).
#     ____                   __________   ____
#    / __ \____  ___  ____  / ____/ __ \ /  _/ ____  _________ _
#   / / / / __ \/ _ \/ __ \/ /   / /_/ / / /  / __ \/ ___/ __ `/
#  / /_/ / /_/ /  __/ / / / /___/ ____/_/ / _/ /_/ / /  / /_/ /
#  \____/ .___/\___/_/ /_/\____/_/    /___/(_)____/_/   \__, /
#      /_/                                             /____/
#
#  OpenCPI is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  OpenCPI is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################### #



#
# ----------------------------------------------------------------------
# Global settings.  These variables must be set.
# ----------------------------------------------------------------------
#
# OCPI_OS:    What target to build for (and which subdirectory of ocpios
#            to use).  Currently supported: winnt, linux, vxworksdkm.
# OCPI_BASE_DIR:    The root directory for ocpi, i.e., the directory that
#            contains this file.  Must be an absolute path.
# OCPI_OUT_DIR:    If non-empty, all object and executable files are placed
#            in this subdirectory at the package level.  This allows
#            building for multiple targets without the need to "make
#            clean" inbetween.
# VOBDIR:    Location of the OCPI view.
#
# MKDEPEND:  The dependency generator tool.  Can just be "fpmkdepend"
#            if it is in the $PATH, else it should be an absolute
#            path.
# DOXYGEN:   The doxygen executable.
# OCPI_DEBUG:     Set to 1 to enable debug information (-g), set to 0 to
#            build optimized code.
# OCPI_ASSERT:    Set to 1 to enable assertions, set to 0 to disable them
#            (defines NDEBUG).
# OCPI_BUILD_SHARED_LIBRARIES:  Set to 1 to build shared libraries/DLLs/DKMs
#            for each facility.  Set to 0 to build static libraries
#            and executables.
# OCPI_HAVE_CORBA: Set to 1 to enable CORBA.
#
# ----------------------------------------------------------------------
#


# #### Guess OCPI_OS if it is not provided ################################# #

ifeq "$(OCPI_OS)" ""

  # Build from Cygwin for vxWorks DKM
  ifeq ($(findstring Cygwin,$(shell uname -a)),Cygwin)
    OCPI_OS = vxworksdkm
  else # Build from Windriver shell for vxWorks DKM
    ifeq ($(findstring windows32,$(shell uname -a)),windows32)
      OCPI_OS = vxworksdkm
    else # Build under Linux for Linux
      OCPI_OS = linux
    endif
  endif

endif

# #### Use Frank's directory if OCPI_BASE_DIR is not provided #################### #

ifeq "$(OCPI_BASE_DIR)" ""

  ifeq ($(OCPI_OS),winnt)
    OCPI_BASE_DIR = c:/Frank/soft/ocpi
  endif

  ifeq ($(OCPI_OS),linux)
    OCPI_BASE_DIR = /h/fpilhofe/soft/ocpi
  endif

  ifeq ($(OCPI_OS),vxworksdkm)
    OCPI_BASE_DIR = c:/Frank/soft/ocpi
  endif

endif # End: ifeq "$(OCPI_BASE_DIR)" ""

#
# Location of the OCPI view.  Only used for "make diff" at this point.
#

ifeq "$(VOBDIR)" ""
  VOBDIR = //pagan/view/fp_ocpi/vobs/ocpi
endif

ifeq "$(OCPI_OUT_DIR)" ""
  OCPI_OUT_DIR = $(OCPI_OS)-bin
endif

ifeq "$(DATAPLANE)" ""
DATAPLANE=dataplane
endif

#
# Build settings.
#

ifeq "$(OCPI_DEBUG)" ""
  OCPI_DEBUG = 1
endif

ifeq "$(OCPI_ASSERT)" ""
  OCPI_ASSERT = 1
endif

ifeq "$(OCPI_HAVE_CORBA)" ""
  OCPI_HAVE_CORBA = 1
endif

ifeq "$(OCPI_BUILD_SHARED_LIBRARIES)" ""
  OCPI_BUILD_SHARED_LIBRARIES = 1
endif

#
# Dependency generator
#

ifeq "$(MKDEPEND)" ""
  MKDEPEND = fpmkdepend
endif

#
# Doxygen
#

ifeq "$(DOXYGEN)" ""
  DOXYGEN = doxygen
endif

#
# ----------------------------------------------------------------------
# Optional settings.
# ----------------------------------------------------------------------
#
# ALLDEFS:   A list of symbols to be defined (=1) when compiling C and
#            C++ code.  E.g., ALLDEFS += FOO will pass -DFOO=1 to the
#            compiler.
# ALLINC:    A list of include paths to be passed to the C and C++
#            compilers.
# CFLAGS:    Additional flags to pass to the C compiler.
# CXXFLAGS:  Additional flags to pass to the C++ compiler.
# ----------------------------------------------------------------------
#

#ALLDEFS +=

#
# ----------------------------------------------------------------------
# WindRiver Workbench settings. Only used when $(OCPI_OS)=vxworksdkm.
# ----------------------------------------------------------------------
#
# WIND_HOME: The root directory of the WindRiver directory on the PC
#            used to build for VxWorks DKM or RTP.
# WIND_BASE: The directory that contains the VxWorks-specific files,
#            such as the header files at $(WIND_BASE)/target/h.
# WIND_WORKBENCH: The directory that contains the Workbench files.
# WIND_GNU_PATH: The directory that contains the GNU compiler.
# WIND_HOST_TYPE: The type of the local host that runs the cross-build
#            tools.  E.g., "x86-win32" or "x86-linux2", so that
#            $(WIND_WORKBENCH)/$(WIND_HOST_TYPE)/bin contains the
#            cross-build tools.
# WIND_BUILD_SPEC: The type of target to build for.  Supported values
#            are "PPC85XXgnu" and "SIMNTgnu".
# ----------------------------------------------------------------------
#

ifeq "$(WIND_HOME)" ""
  WIND_HOME := c:/Software/WindRiver
endif

WIND_BASE := $(WIND_HOME)/vxworks-6.3
WIND_WORKBENCH := $(WIND_HOME)/workbench-2.5
WIND_GNU_PATH := $(WIND_HOME)/gnu/3.4.4-vxworks-6.3
ifeq "$(WIND_HOST_TYPE)" ""
  WIND_HOST_TYPE := x86-win32
endif
WIND_BUILD_SPEC := PPC85XXgnu
# WIND_BUILD_SPEC := SIMNTgnu

#
# ----------------------------------------------------------------------
# Windows settings. Only used when $(OCPI_OS)=winnt
# ----------------------------------------------------------------------
#
# WINNT_TOOLCHAIN: Set to "msvc" to build with MSVC++ (using the "cl"
#            compiler), set to "mingw" to build with MinGW's gcc.
#
# ----------------------------------------------------------------------
#

WINNT_TOOLCHAIN = msvc

#
# ----------------------------------------------------------------------
# Linux cross-compile settings. Only used when $(OCPI_OS)=linux and
# $(OCPI_CROSS_HOST) is not the empty string.
# ----------------------------------------------------------------------
#
# OCPI_CROSS_HOST: The target type.  $(OCPI_CROSS_HOST) is used as a prefix for
#            the cross-build executables, e.g., $(OCPI_CROSS_HOST)-gcc for
#            the C compiler.
# OCPI_CROSS_BUILD_BIN_DIR: The directory that contains the cross-build tools,
#            e.g., $(OCPI_CROSS_BUILD_BIN_DIR)/$(OCPI_CROSS_HOST)-gcc.
#
# ----------------------------------------------------------------------
#

#OCPI_CROSS_HOST=ppc74xx-linux
#OCPI_CROSS_BUILD_BIN_DIR=/opt/timesys/toolchains/$(OCPI_CROSS_HOST)/bin

#
# ----------------------------------------------------------------------
# CORBA settings. Only used when $(OCPI_HAVE_CORBA)=1
# ----------------------------------------------------------------------
#
# OCPI_CORBA_ORB:       Which OCPI_CORBA_ORB to use.  Only "TAO" is supported at the moment.
#
# ----------------------------------------------------------------------
#

ifeq "$(OCPI_CORBA_ORB)" ""
OCPI_CORBA_ORB = TAO
endif

#
# ----------------------------------------------------------------------
# TAO settings. Only used when $(OCPI_HAVE_CORBA)=1 and $(OCPI_CORBA_ORB)=TAO
# ----------------------------------------------------------------------
#
# TAO_DEBUG: Set to 1 to link against the TAO debug libraries.  Set to
#            0 to link against the TAO release libraries.
# ACE_ROOT:  Absolute path to the "ACE_wrappers" directory.
# TAO_ROOT:  Absolute path to the "ACE_wrappers/TAO" directory, so that
#            $(TAO_ROOT)/tao/orb.idl exists.  Usually $(ACE_ROOT)/TAO.
# TAO_BIN:   Path to the TAO executables, so that $(TAO_BIN)/tao_idl
#            exists.  Usually $(ACE_ROOT)/bin, except when cross-
#            compiling.
# ACE_LIB:   Path to the ACE library.  Usually $(ACE_ROOT)/lib.
# TAO_LIB:   Path to the TAO libraries.  Usually the same as $(ACE_LIB).
# ACE_INC:   Path to the ACE include files, e.g., $(ACE_INC)/ace/ACE.h.
#            Usually the same as $(ACE_ROOT).
# TAO_INC:   Path to the TAO include files, e.g., $(TAO_INC)/tao/corba.h.
#            Usually the same as $(TAO_ROOT).
# ORBSVCS:   Path to the COSS IDL and include files, e.g.,
#            $(ORBSVCS)/orbsvcs/CosNaming.idl
#
# ----------------------------------------------------------------------
#

TAO_DEBUG = 1

#
# Hack so that TAO and ORBexpress can live together
#

# CXXFLAGS += -DCF=VXTAO_CF -DPOA_CF=VXTAO_POA_CF -DStandardEvent=VXTAO_StandardEvent

#
# TAO paths
#

ifeq ($(OCPI_OS),linux)
ifeq "$(ACE_ROOT)" ""
ACE_ROOT=/opt/local/TAO/5.6.6/linux-x86-gcc/ACE_wrappers
endif

TAO_ROOT=$(ACE_ROOT)/TAO
TAO_BIN=$(ACE_ROOT)/bin
ACE_LIB=$(ACE_ROOT)/lib
TAO_LIB=$(ACE_LIB)
ACE_INC=$(ACE_ROOT)
TAO_INC=$(TAO_ROOT)
ORBSVCS=$(TAO_ROOT)/orbsvcs
else
ifeq "$(ACE_ROOT)" ""
ACE_ROOT=/opt/local/TAO/5.6.6/vxworks-ppc8548-gcc/ACE_wrappers
endif
ifeq "$(HOST_ROOT)" ""
HOST_ROOT=/opt/local/TAO/5.6.6/linux-x86-gcc/ACE_wrappers
endif
TAO_ROOT=$(ACE_ROOT)/TAO
TAO_BIN=$(HOST_ROOT)/bin
ACE_LIB=$(ACE_ROOT)/lib
TAO_LIB=$(ACE_LIB)
ACE_INC=$(ACE_ROOT)
TAO_INC=$(TAO_ROOT)
ORBSVCS=$(TAO_ROOT)/orbsvcs
endif

#
# ----------------------------------------------------------------------
# SCA settings
# ----------------------------------------------------------------------
#
# SCAVERSION: Can be either 2.2 or 2.2.2.
#
# ----------------------------------------------------------------------
#

SCAVERSION = 2.2.2
