# #####
#
#  Copyright (c) Mercury Federal Systems, Inc., Arlington VA., 2009-2010
#
#    Mercury Federal Systems, Incorporated
#    1901 South Bell Street
#    Suite 402
#    Arlington, Virginia 22202
#    United States of America
#    Telephone 703-413-0781
#    FAX 703-413-0784
#
#  This file is part of OpenCPI (www.opencpi.org).
#     ____                   __________   ____
#    / __ \____  ___  ____  / ____/ __ \ /  _/ ____  _________ _
#   / / / / __ \/ _ \/ __ \/ /   / /_/ / / /  / __ \/ ___/ __ `/
#  / /_/ / /_/ /  __/ / / / /___/ ____/_/ / _/ /_/ / /  / /_/ /
#  \____/ .___/\___/_/ /_/\____/_/    /___/(_)____/_/   \__, /
#      /_/                                             /____/
#
#  OpenCPI is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  OpenCPI is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with OpenCPI.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################### #



all: objects

include $(OCPI_BASE_DIR)MakeVars.ocpi
ifneq ($(OCPI_OUT_DIR),)
OBJDIR = ../../$(OCPI_OUT_DIR)
else
OBJDIR = .
endif
include $(OCPI_BASE_DIR)Makefile.ocpi.common

ifneq ($(wildcard ../../Makefile.ocpi.imports),)
include ../../Makefile.ocpi.imports
endif

CFLAGS += $(EXTRA_CFLAGS)
CXXFLAGS += $(EXTRA_CXXFLAGS)
ALLDEFS += $(EXTRA_DEFS)
ALLINC += $(wildcard ../../*/include) $(wildcard ../../*/idl) $(EXTRA_INCLUDES)

ifeq ($(OCPI_BUILD_SHARED_LIBRARIES),1)
ifneq ($(filter linux darwin,$(OCPI_OS)),)
CFLAGS += -fPIC
CXXFLAGS += -fPIC
endif
endif

#
# C/C++ files
#

CSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.c))
CXXSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.cxx))
CPPSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.cpp))
ASMSOURCES = $(filter-out $(EXCLUDE_SOURCES),$(wildcard *.asm))
COBJECTS = $(patsubst %.c,$(OBJDIR)/%.obj,$(CSOURCES))
CXXOBJECTS = $(patsubst %.cxx,$(OBJDIR)/%.obj,$(CXXSOURCES))
CPPOBJECTS = $(patsubst %.cpp,$(OBJDIR)/%.obj,$(CPPSOURCES))
ASMOBJECTS = $(patsubst %.asm,$(OBJDIR)/%.obj,$(ASMSOURCES))
OBJECTS = $(COBJECTS) $(CXXOBJECTS) $(CPPOBJECTS) $(ASMOBJECTS) 
CDEPENDS = $(patsubst %.c,%.d,$(CSOURCES))
CXXDEPENDS = $(patsubst %.cxx,%.d,$(CXXSOURCES))
CPPDEPENDS = $(patsubst %.cpp,%.d,$(CPPSOURCES))

#
# Rules
#

.PHONY: objdir objects depends generated clean distclean cleanup distcleanup

objdir:
	$(AT)if test "x$(OCPI_OUT_DIR)" != "x" -a ! -d $(OBJDIR) ; then echo Creating object directory $(OBJDIR); mkdir -p $(OBJDIR) ; fi

depends: $(CDEPENDS) $(CXXDEPENDS) $(CPPDEPENDS)
generated: depends
objects: generated objdir $(OBJECTS)
clean: cleanup
	-rm -f $(OBJECTS)
distclean: distcleanup
	-rm -f $(OBJECTS)

#
# Direct dependencies for C/C++ files
#

$(COBJECTS): $(OBJDIR)/%.obj: %.c
$(CXXOBJECTS): $(OBJDIR)/%.obj: %.cxx
$(CPPOBJECTS): $(OBJDIR)/%.obj: %.cpp
$(ASMOBJECTS): $(OBJDIR)/%.obj: %.asm
$(CDEPENDS): %.d: %.c
$(CXXDEPENDS): %.d: %.cxx 
$(CPPDEPENDS): %.d: %.cpp

#
# Include generated dependency files
#

ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
ifneq ($(wildcard *.d),)
include *.d
endif
endif
